{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Halo",
    "version" : "2.21.0"
  },
  "servers" : [ {
    "url" : "http://localhost:47181",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "basicAuth" : [ ],
    "bearerAuth" : [ ]
  } ],
  "paths" : {
    "/apis/console.api.link.submit.kunkunyu.com/v1alpha1/linksubmits" : {
      "get" : {
        "description" : "List LinkSubmits.",
        "operationId" : "ListLinkSubmits",
        "parameters" : [ {
          "description" : "Page number. Default is 0.",
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Size number. Default is 0.",
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Label selector. e.g.: hidden!=true",
          "in" : "query",
          "name" : "labelSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Field selector. e.g.: metadata.name==halo",
          "in" : "query",
          "name" : "fieldSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "LinkSubmits filtered by keyword.",
          "in" : "query",
          "name" : "keyword",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "status",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkSubmitList"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "console.api.link.submit.kunkunyu.com/v1alpha1/ListLinkSubmit" ]
      }
    },
    "/apis/console.api.link.submit.kunkunyu.com/v1alpha1/linksubmits/{name}/check" : {
      "post" : {
        "description" : "友链提交审核操作",
        "operationId" : "check",
        "parameters" : [ {
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckLinkSubmitRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkSubmit"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "console.api.link.submit.kunkunyu.com/v1alpha1/ListLinkSubmit" ]
      }
    },
    "/apis/link.submit.kunkunyu.com/v1alpha1/cronlinksubmits" : {
      "get" : {
        "description" : "List CronLinkSubmit",
        "operationId" : "listCronLinkSubmit",
        "parameters" : [ {
          "description" : "Page number. Default is 0.",
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Size number. Default is 0.",
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Label selector. e.g.: hidden!=true",
          "in" : "query",
          "name" : "labelSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Field selector. e.g.: metadata.name==halo",
          "in" : "query",
          "name" : "fieldSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CronLinkSubmitList"
                }
              }
            },
            "description" : "Response cronlinksubmits"
          }
        },
        "tags" : [ "CronLinkSubmitV1alpha1" ]
      },
      "post" : {
        "description" : "Create CronLinkSubmit",
        "operationId" : "createCronLinkSubmit",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CronLinkSubmit"
              }
            }
          },
          "description" : "Fresh cronlinksubmit"
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CronLinkSubmit"
                }
              }
            },
            "description" : "Response cronlinksubmits created just now"
          }
        },
        "tags" : [ "CronLinkSubmitV1alpha1" ]
      }
    },
    "/apis/link.submit.kunkunyu.com/v1alpha1/cronlinksubmits/{name}" : {
      "delete" : {
        "description" : "Delete CronLinkSubmit",
        "operationId" : "deleteCronLinkSubmit",
        "parameters" : [ {
          "description" : "Name of cronlinksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response cronlinksubmit deleted just now"
          }
        },
        "tags" : [ "CronLinkSubmitV1alpha1" ]
      },
      "get" : {
        "description" : "Get CronLinkSubmit",
        "operationId" : "getCronLinkSubmit",
        "parameters" : [ {
          "description" : "Name of cronlinksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CronLinkSubmit"
                }
              }
            },
            "description" : "Response single cronlinksubmit"
          }
        },
        "tags" : [ "CronLinkSubmitV1alpha1" ]
      },
      "patch" : {
        "description" : "Patch CronLinkSubmit",
        "operationId" : "patchCronLinkSubmit",
        "parameters" : [ {
          "description" : "Name of cronlinksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JsonPatch"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CronLinkSubmit"
                }
              }
            },
            "description" : "Response cronlinksubmit patched just now"
          }
        },
        "tags" : [ "CronLinkSubmitV1alpha1" ]
      },
      "put" : {
        "description" : "Update CronLinkSubmit",
        "operationId" : "updateCronLinkSubmit",
        "parameters" : [ {
          "description" : "Name of cronlinksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CronLinkSubmit"
              }
            }
          },
          "description" : "Updated cronlinksubmit"
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CronLinkSubmit"
                }
              }
            },
            "description" : "Response cronlinksubmits updated just now"
          }
        },
        "tags" : [ "CronLinkSubmitV1alpha1" ]
      }
    },
    "/apis/link.submit.kunkunyu.com/v1alpha1/linksubmits" : {
      "get" : {
        "description" : "List LinkSubmit",
        "operationId" : "listLinkSubmit",
        "parameters" : [ {
          "description" : "Page number. Default is 0.",
          "in" : "query",
          "name" : "page",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Size number. Default is 0.",
          "in" : "query",
          "name" : "size",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "description" : "Label selector. e.g.: hidden!=true",
          "in" : "query",
          "name" : "labelSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Field selector. e.g.: metadata.name==halo",
          "in" : "query",
          "name" : "fieldSelector",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "description" : "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkSubmitList"
                }
              }
            },
            "description" : "Response linksubmits"
          }
        },
        "tags" : [ "LinkSubmitV1alpha1" ]
      },
      "post" : {
        "description" : "Create LinkSubmit",
        "operationId" : "createLinkSubmit",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkSubmit"
              }
            }
          },
          "description" : "Fresh linksubmit"
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkSubmit"
                }
              }
            },
            "description" : "Response linksubmits created just now"
          }
        },
        "tags" : [ "LinkSubmitV1alpha1" ]
      }
    },
    "/apis/link.submit.kunkunyu.com/v1alpha1/linksubmits/{name}" : {
      "delete" : {
        "description" : "Delete LinkSubmit",
        "operationId" : "deleteLinkSubmit",
        "parameters" : [ {
          "description" : "Name of linksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response linksubmit deleted just now"
          }
        },
        "tags" : [ "LinkSubmitV1alpha1" ]
      },
      "get" : {
        "description" : "Get LinkSubmit",
        "operationId" : "getLinkSubmit",
        "parameters" : [ {
          "description" : "Name of linksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkSubmit"
                }
              }
            },
            "description" : "Response single linksubmit"
          }
        },
        "tags" : [ "LinkSubmitV1alpha1" ]
      },
      "patch" : {
        "description" : "Patch LinkSubmit",
        "operationId" : "patchLinkSubmit",
        "parameters" : [ {
          "description" : "Name of linksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JsonPatch"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkSubmit"
                }
              }
            },
            "description" : "Response linksubmit patched just now"
          }
        },
        "tags" : [ "LinkSubmitV1alpha1" ]
      },
      "put" : {
        "description" : "Update LinkSubmit",
        "operationId" : "updateLinkSubmit",
        "parameters" : [ {
          "description" : "Name of linksubmit",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkSubmit"
              }
            }
          },
          "description" : "Updated linksubmit"
        },
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkSubmit"
                }
              }
            },
            "description" : "Response linksubmits updated just now"
          }
        },
        "tags" : [ "LinkSubmitV1alpha1" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "add" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      },
      "CheckLinkSubmitRequest" : {
        "required" : [ "checkStatus" ],
        "type" : "object",
        "properties" : {
          "checkStatus" : {
            "type" : "boolean"
          },
          "linkName" : {
            "type" : "string"
          },
          "reason" : {
            "type" : "string"
          }
        }
      },
      "CleanConfig" : {
        "type" : "object",
        "properties" : {
          "moveGroupName" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "withoutCheckGroupNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CopyOperation" : {
        "required" : [ "op", "from", "path" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "op" : {
            "type" : "string",
            "enum" : [ "copy" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "CronLinkSubmit" : {
        "required" : [ "apiVersion", "kind", "metadata", "spec" ],
        "type" : "object",
        "properties" : {
          "apiVersion" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/CronLinkSubmitSpec"
          },
          "status" : {
            "$ref" : "#/components/schemas/CronLinkSubmitStatus"
          }
        }
      },
      "CronLinkSubmitList" : {
        "required" : [ "first", "hasNext", "hasPrevious", "items", "last", "page", "size", "total", "totalPages" ],
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "boolean",
            "description" : "Indicates whether current page is the first page."
          },
          "hasNext" : {
            "type" : "boolean",
            "description" : "Indicates whether current page has previous page."
          },
          "hasPrevious" : {
            "type" : "boolean",
            "description" : "Indicates whether current page has previous page."
          },
          "items" : {
            "type" : "array",
            "description" : "A chunk of items.",
            "items" : {
              "$ref" : "#/components/schemas/CronLinkSubmit"
            }
          },
          "last" : {
            "type" : "boolean",
            "description" : "Indicates whether current page is the last page."
          },
          "page" : {
            "type" : "integer",
            "description" : "Page number, starts from 1. If not set or equal to 0, it means no pagination.",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "description" : "Size of each page. If not set or equal to 0, it means no pagination.",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total elements.",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "description" : "Indicates total pages.",
            "format" : "int64"
          }
        }
      },
      "CronLinkSubmitSpec" : {
        "type" : "object",
        "properties" : {
          "cleanConfig" : {
            "$ref" : "#/components/schemas/CleanConfig"
          },
          "cron" : {
            "type" : "string"
          },
          "suspend" : {
            "type" : "boolean"
          }
        }
      },
      "CronLinkSubmitStatus" : {
        "type" : "object",
        "properties" : {
          "lastScheduledTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nextSchedulingTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "JsonPatch" : {
        "minItems" : 1,
        "uniqueItems" : true,
        "type" : "array",
        "description" : "JSON schema for JSONPatch operations",
        "items" : {
          "oneOf" : [ {
            "$ref" : "#/components/schemas/AddOperation"
          }, {
            "$ref" : "#/components/schemas/ReplaceOperation"
          }, {
            "$ref" : "#/components/schemas/TestOperation"
          }, {
            "$ref" : "#/components/schemas/RemoveOperation"
          }, {
            "$ref" : "#/components/schemas/MoveOperation"
          }, {
            "$ref" : "#/components/schemas/CopyOperation"
          } ]
        }
      },
      "LinkSubmit" : {
        "required" : [ "apiVersion", "kind", "metadata", "spec" ],
        "type" : "object",
        "properties" : {
          "apiVersion" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/Metadata"
          },
          "spec" : {
            "$ref" : "#/components/schemas/LinkSubmitSpec"
          }
        }
      },
      "LinkSubmitList" : {
        "required" : [ "first", "hasNext", "hasPrevious", "items", "last", "page", "size", "total", "totalPages" ],
        "type" : "object",
        "properties" : {
          "first" : {
            "type" : "boolean",
            "description" : "Indicates whether current page is the first page."
          },
          "hasNext" : {
            "type" : "boolean",
            "description" : "Indicates whether current page has previous page."
          },
          "hasPrevious" : {
            "type" : "boolean",
            "description" : "Indicates whether current page has previous page."
          },
          "items" : {
            "type" : "array",
            "description" : "A chunk of items.",
            "items" : {
              "$ref" : "#/components/schemas/LinkSubmit"
            }
          },
          "last" : {
            "type" : "boolean",
            "description" : "Indicates whether current page is the last page."
          },
          "page" : {
            "type" : "integer",
            "description" : "Page number, starts from 1. If not set or equal to 0, it means no pagination.",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "description" : "Size of each page. If not set or equal to 0, it means no pagination.",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total elements.",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "description" : "Indicates total pages.",
            "format" : "int64"
          }
        }
      },
      "LinkSubmitSpec" : {
        "required" : [ "displayName", "status", "type", "url" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "logo" : {
            "type" : "string"
          },
          "oldUrl" : {
            "type" : "string"
          },
          "rssUrl" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "review", "pending", "refuse" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "add", "update" ]
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "Metadata" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "annotations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Annotations are like key-value format."
          },
          "creationTimestamp" : {
            "type" : "string",
            "description" : "Creation timestamp of the Extension.",
            "format" : "date-time",
            "nullable" : true
          },
          "deletionTimestamp" : {
            "type" : "string",
            "description" : "Deletion timestamp of the Extension.",
            "format" : "date-time",
            "nullable" : true
          },
          "finalizers" : {
            "uniqueItems" : true,
            "type" : "array",
            "nullable" : true,
            "items" : {
              "type" : "string",
              "nullable" : true
            }
          },
          "generateName" : {
            "type" : "string",
            "description" : "The name field will be generated automatically according to the given generateName field"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Labels are like key-value format."
          },
          "name" : {
            "type" : "string",
            "description" : "Metadata name"
          },
          "version" : {
            "type" : "integer",
            "description" : "Current version of the Extension. It will be bumped up every update.",
            "format" : "int64",
            "nullable" : true
          }
        },
        "description" : "Metadata of Extension."
      },
      "MoveOperation" : {
        "required" : [ "op", "from", "path" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "op" : {
            "type" : "string",
            "enum" : [ "move" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "RemoveOperation" : {
        "required" : [ "op", "path" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "remove" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          }
        }
      },
      "ReplaceOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "replace" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      },
      "TestOperation" : {
        "required" : [ "op", "path", "value" ],
        "type" : "object",
        "properties" : {
          "op" : {
            "type" : "string",
            "enum" : [ "test" ]
          },
          "path" : {
            "pattern" : "^(/[^/~]*(~[01][^/~]*)*)*$",
            "type" : "string",
            "description" : "A JSON Pointer path pointing to the location to move/copy from.",
            "example" : "/a/b/c"
          },
          "value" : {
            "description" : "Value can be any JSON value"
          }
        }
      }
    },
    "securitySchemes" : {
      "basicAuth" : {
        "scheme" : "basic",
        "type" : "http"
      },
      "bearerAuth" : {
        "bearerFormat" : "JWT",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}